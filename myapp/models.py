from django.db import models
from django.utils import timezone

class ConsUserGroup(models.Model):
    id_user = models.AutoField(primary_key=True)
    username = models.CharField(max_length=50, default='')
    sec_group = models.CharField(max_length=50, default='')
    f_read_only = models.SmallIntegerField(default=0)
    f_active = models.SmallIntegerField(default=1)
    f_locked = models.SmallIntegerField(default=0)
    f_bit_status = models.IntegerField(default=0)
    user_created = models.CharField(max_length=128, default='suser_sname()')
    user_modif = models.CharField(max_length=128, default='suser_sname()')
    date_created = models.DateTimeField(default=timezone.now)
    date_modif = models.DateTimeField(default=timezone.now)
    user_verify = models.CharField(max_length=128, null=True, blank=True)
    date_verify = models.DateTimeField(null=True, blank=True)
    iso_rev = models.IntegerField(default=0)

    class Meta:
        db_table = "CONS_USER_GROUP"
        unique_together = (("sec_group", "username"),)
        verbose_name_plural = "Cons User Groups"

    def __str__(self):
        return f"User {self.ID_USER}"


class MAINT_WORK_ORDER_CHECK_LIST_V(models.Model):
    ID_WORK_ORDER_CHECK_LIST = models.AutoField(primary_key=True)
    ID_WORK_ORDER_HEADER = models.IntegerField()
    ID_WO_CHECK_LIST = models.IntegerField()
    LINE_NO = models.IntegerField()
    F_DONE = models.BooleanField()
    NOTE = models.CharField(max_length=6000, null=True, blank=True)
    F_READ_ONLY = models.SmallIntegerField()
    F_LOCKED = models.SmallIntegerField()
    F_ACTIVE = models.SmallIntegerField()
    F_BIT_STATUS = models.IntegerField()
    USER_CREATED = models.CharField(max_length=128)
    USER_MODIF = models.CharField(max_length=128)
    USER_VERIFY = models.CharField(max_length=128, null=True, blank=True)
    DATE_CREATED = models.DateTimeField()
    DATE_MODIF = models.DateTimeField()
    DATE_VERIFY = models.DateTimeField(null=True, blank=True)
    ISO_REV = models.IntegerField()
    NO_WORK_ORDER_HEADER = models.CharField(max_length=40, null=True, blank=True)
    NO_WO_CHECK_LIST = models.CharField(max_length=40, null=True, blank=True)
    DESCRIPTION = models.CharField(max_length=255, null=True, blank=True)
    REMARK = models.CharField(max_length=6000, null=True, blank=True)
    F_NON_COMPLIANT = models.BooleanField()
    INPUT_VALUE = models.DecimalField(max_digits=28, decimal_places=6, null=True, blank=True)
    MINIMAL_LIMIT = models.DecimalField(max_digits=28, decimal_places=6, null=True, blank=True)
    MAXIMAL_LIMIT = models.DecimalField(max_digits=28, decimal_places=6, null=True, blank=True)
    NOMINAL_VALUE = models.DecimalField(max_digits=28, decimal_places=6, null=True, blank=True)
    TYPE = models.CharField(max_length=20, null=True, blank=True)
    ID_UNIT = models.IntegerField(null=True, blank=True)
    UNIT = models.CharField(max_length=50, null=True, blank=True)
    ID_EQUIPMENT = models.IntegerField(null=True, blank=True)
    ID_EMPLOYEE_SUPERVISOR_VERIFIED = models.IntegerField(null=True, blank=True)
    NO_EMPLOYEE_SUPERVISOR_VERIFIED = models.CharField(max_length=81, null=True, blank=True)
    ID_EMPLOYEE_QUALITY_CONTROL = models.IntegerField(null=True, blank=True)
    NO_EMPLOYEE_QUALITY_CONTROL = models.CharField(max_length=81, null=True, blank=True)
    ID_EMPLOYEE_DONE = models.IntegerField(null=True, blank=True)
    NO_EMPLOYEE_DONE = models.CharField(max_length=81, null=True, blank=True)
    F_QUALITY_CONTROL = models.BooleanField(null=True, blank=True)
    F_SUPERVISOR_VERIFIED = models.BooleanField(null=True, blank=True)

    class Meta:
        db_table = "MAINT_WORK_ORDER_CHECK_LIST_V"
        verbose_name_plural = "Maintenance Work Order Check List Views"

    def __str__(self):
        return f"Work Order Check List {self.ID_WORK_ORDER_CHECK_LIST}"



class MAINT_WORK_ORDER_HEADER_V(models.Model):
    ID_WORK_ORDER_HEADER = models.AutoField(primary_key=True)
    NO_WORK_ORDER_HEADER = models.CharField(max_length=40)
    F_READ_ONLY = models.SmallIntegerField()
    F_LOCKED = models.SmallIntegerField()
    F_ACTIVE = models.SmallIntegerField()
    F_BIT_STATUS = models.IntegerField()
    USER_CREATED = models.CharField(max_length=128)
    USER_MODIF = models.CharField(max_length=128)
    USER_VERIFY = models.CharField(max_length=128, null=True, blank=True)
    DATE_CREATED = models.DateTimeField()
    DATE_MODIF = models.DateTimeField()
    DATE_VERIFY = models.DateTimeField(null=True, blank=True)
    ISO_REV = models.IntegerField()
    F_WO_CORRECTIVE = models.BooleanField()
    F_WO_PREVENTIVE = models.BooleanField()
    F_WO_SERVICE_CALL = models.BooleanField()
    ID_EQUIPMENT = models.IntegerField(null=True, blank=True)
    ID_EMPLOYEE_RECEIVER = models.IntegerField(null=True, blank=True)
    ID_EMPLOYEE_SENDER = models.IntegerField(null=True, blank=True)
    ID_WO_STATUS = models.IntegerField(null=True, blank=True)
    ID_EXPENSE_ACCOUNT = models.IntegerField(null=True, blank=True)
    ID_WO_PRIORITY = models.IntegerField(null=True, blank=True)
    DATE_OPEN = models.DateTimeField(null=True, blank=True)
    DATE_START = models.DateTimeField(null=True, blank=True)
    DATE_CLOSE = models.DateTimeField(null=True, blank=True)
    DATE_REALISATION = models.DateTimeField(null=True, blank=True)
    DESCRIPTION = models.CharField(max_length=255, null=True, blank=True)
    ID_WO_REPAIR_CLASS = models.IntegerField(null=True, blank=True)
    OTHER_TOOK_ACTION = models.CharField(max_length=2000, null=True, blank=True)
    ID_WORK_ORDER_HEADER_PARENT = models.IntegerField(null=True, blank=True)
    ID_WORK_ORDER_HEADER_PREVENTIVE = models.IntegerField(null=True, blank=True)
    ID_EMPLOYEE_RESPONSIBLE = models.IntegerField(null=True, blank=True)
    ID_WO_REQUEST = models.IntegerField(null=True, blank=True)
    FAILURE_TIME = models.DecimalField(max_digits=28, decimal_places=6)
    ID_EQUIPMENT_METER = models.IntegerField(null=True, blank=True)
    LIFE_METER_ESTIMATE = models.IntegerField()
    DIAGNOSIS = models.CharField(max_length=500, null=True, blank=True)
    SOLUTION = models.CharField(max_length=500, null=True, blank=True)
    ID_EXECUTION_MODE = models.IntegerField(null=True, blank=True)
    F_ARCHIVED = models.BooleanField()
    NOTE = models.CharField(max_length=2000, null=True, blank=True)
    REMARK_REQUEST_CODE = models.CharField(max_length=2000, null=True, blank=True)
    SMALL_REMARK = models.CharField(max_length=100, null=True, blank=True)
    REMARK = models.TextField(null=True, blank=True)
    ID_SECTION_TAG = models.IntegerField(null=True, blank=True)
    F_WO_PREVENTIVE_CFG = models.BooleanField()
    F_WO_WORK_REQUEST = models.BooleanField()
    WORK_REQUEST_STATE = models.CharField(max_length=8, null=True, blank=True)
    ID_EMPLOYEE_APPROBATION_WR = models.IntegerField(null=True, blank=True)
    DATE_APPROBATION_WR = models.DateTimeField(null=True, blank=True)
    NO_WORK_ORDER_HEADER_WR = models.CharField(max_length=40, null=True, blank=True)
    ID_PLANT = models.IntegerField(null=True, blank=True)
    F_READ = models.BooleanField()
    ID_LOCKING_PROCEDURE_HEADER = models.IntegerField(null=True, blank=True)
    ID_INSPECTION_ROAD = models.IntegerField(null=True, blank=True)
    ID_CALIBRATION_SHEET = models.IntegerField(null=True, blank=True)
    METER_EMISSION_VALUE = models.BigIntegerField()
    METER_UNIT = models.CharField(max_length=40, null=True, blank=True)
    DATA01 = models.CharField(max_length=80, null=True, blank=True)
    DATA02 = models.CharField(max_length=80, null=True, blank=True)
    DATA03 = models.CharField(max_length=80, null=True, blank=True)
    DATA04 = models.CharField(max_length=80, null=True, blank=True)
    DATA05 = models.CharField(max_length=80, null=True, blank=True)
    DATA06 = models.CharField(max_length=80, null=True, blank=True)
    DATA07 = models.CharField(max_length=80, null=True, blank=True)
    DATA08 = models.CharField(max_length=80, null=True, blank=True)
    DATA09 = models.CharField(max_length=80, null=True, blank=True)
    DATA10 = models.CharField(max_length=80, null=True, blank=True)
    DATA11 = models.CharField(max_length=80, null=True, blank=True)
    DATA12 = models.CharField(max_length=80, null=True, blank=True)
    DATA13 = models.CharField(max_length=80, null=True, blank=True)
    DATA14 = models.CharField(max_length=80, null=True, blank=True)
    DATA15 = models.CharField(max_length=80, null=True, blank=True)
    DATA16 = models.CharField(max_length=80, null=True, blank=True)
    DATA17 = models.CharField(max_length=80, null=True, blank=True)
    DATA18 = models.CharField(max_length=80, null=True, blank=True)
    DATA19 = models.CharField(max_length=80, null=True, blank=True)
    DATA20 = models.CharField(max_length=80, null=True, blank=True)
    DATA21 = models.CharField(max_length=80, null=True, blank=True)
    DATA22 = models.CharField(max_length=80, null=True, blank=True)
    DATA23 = models.CharField(max_length=80, null=True, blank=True)
    DATA24 = models.CharField(max_length=80, null=True, blank=True)
    NO_EQUIPMENT = models.CharField(max_length=40, null=True, blank=True)
    NO_EMPLOYEE_APPROBATION = models.CharField(max_length=50, null=True, blank=True)
    NO_EMPPLOYEE_RECEIVER = models.CharField(max_length=50, null=True, blank=True)
    NO_WO_STATUS = models.CharField(max_length=40, null=True, blank=True)
    NO_EXPENSE_ACCOUNT = models.CharField(max_length=255, null=True, blank=True)
    NO_WO_PRIORITY = models.CharField(max_length=40, null=True, blank=True)
    NO_WO_REPAIR_CLASS = models.CharField(max_length=40, null=True, blank=True)
    NO_EMPLOYEE_RESPONSIBLE = models.CharField(max_length=50, null=True, blank=True)
    NO_WO_REQUEST_CODE = models.CharField(max_length=40, null=True, blank=True)
    EQUIPMENT_METER = models.CharField(max_length=40, null=True, blank=True)
    NO_WO_EXECUTION_MODE = models.CharField(max_length=40, null=True, blank=True)
    TAG = models.CharField(max_length=40, null=True, blank=True)
    NO_SECTION = models.CharField(max_length=40, null=True, blank=True)
    NO_EMPLOYEE_SENDER = models.CharField(max_length=50, null=True, blank=True)
    NAME = models.CharField(max_length=40, null=True, blank=True)
    NO_LOCKING_PROCEDURE_HEADER = models.CharField(max_length=80, null=True, blank=True)
    RECEIVER_COMPLETE_NAME = models.CharField(max_length=81, null=True, blank=True)
    SENDER_COMPLETE_NAME = models.CharField(max_length=81, null=True, blank=True)
    RESPONSIBLE_COMPLETE_NAME = models.CharField(max_length=81, null=True, blank=True)
    PRIORITY_NB_DAY = models.IntegerField()
    PLANT_NAME = models.CharField(max_length=40, null=True, blank=True)
    EQUIPMENT_DIVISION = models.CharField(max_length=80, null=True, blank=True)
    EQUIPMENT_LOCATION = models.CharField(max_length=80, null=True, blank=True)
    EQUIPMENT_GROUP = models.CharField(max_length=40, null=True, blank=True)
    EQUIPMENT_DESCRIPTION = models.CharField(max_length=120, null=True, blank=True)
    WO_REQUEST_CODE_DESCRIPTION = models.CharField(max_length=255, null=True, blank=True)
    F_LATE = models.IntegerField(null=True, blank=True)
    NBR_DAYS_LATE = models.IntegerField(null=True, blank=True)
    F_CLOSED = models.IntegerField()
    NO_RESOURCE = models.CharField(max_length=40, null=True, blank=True)
    NOTE_EXTRA = models.CharField(max_length=6000, null=True, blank=True)
    DATE_REPORT_DEBUT = models.DateTimeField(null=True, blank=True)
    TOTAL_TIME_PLAN = models.DecimalField(max_digits=28, decimal_places=6)
    F_WO_ANTICIPATED = models.BooleanField()
    METER_CLOSING_VALUE = models.BigIntegerField()
    NO_EQUIPMENT_CRITICALITY = models.CharField(max_length=40, null=True, blank=True)

    class Meta:
        db_table = "MAINT_WORK_ORDER_HEADER_V"
        verbose_name_plural = "Maintenance Work Order Header Views"

    def __str__(self):
        return f"Work Order Header {self.ID_WORK_ORDER_HEADER}"



class EQUP_EQUIPMENT_V(models.Model):
    ID_EQUIPMENT = models.IntegerField(primary_key=True)
    NO_EQUIPMENT = models.CharField(max_length=40)
    F_READ_ONLY = models.SmallIntegerField()
    F_LOCKED = models.SmallIntegerField()
    F_ACTIVE = models.SmallIntegerField()
    F_BIT_STATUS = models.IntegerField()
    USER_CREATED = models.CharField(max_length=128)
    USER_MODIF = models.CharField(max_length=128)
    USER_VERIFY = models.CharField(max_length=128, null=True, blank=True)
    DATE_CREATED = models.DateTimeField()
    DATE_MODIF = models.DateTimeField()
    DATE_VERIFY = models.DateTimeField(null=True, blank=True)
    ISO_REV = models.IntegerField()
    ID_EXPENSE_ACCOUNT = models.IntegerField(null=True, blank=True)
    DESCRIPTION = models.CharField(max_length=120, null=True, blank=True)
    HOUR_RATE = models.DecimalField(max_digits=28, decimal_places=6, null=True, blank=True)
    ID_TOOL_GROUP = models.IntegerField(null=True, blank=True)
    ID_PLANT = models.IntegerField(null=True, blank=True)
    EQUIPMENT_DIVISION = models.CharField(max_length=80, null=True, blank=True)
    EQUIPMENT_LOCATION = models.CharField(max_length=80, null=True, blank=True)
    EQUIPMENT_GROUP = models.CharField(max_length=40, null=True, blank=True)
    GUARANTEE_ENDING = models.DateTimeField(null=True, blank=True)
    DRAWING = models.CharField(max_length=255, null=True, blank=True)
    NOTE = models.CharField(max_length=5000, null=True, blank=True)
    F_EQUIPMENT_LOCK = models.BooleanField()
    ID_EQUIPMENT_METER = models.IntegerField(null=True, blank=True)
    METER_LIFE_VALUE = models.BigIntegerField(null=True, blank=True)
    DATA01 = models.CharField(max_length=80, null=True, blank=True)
    DATA02 = models.CharField(max_length=80, null=True, blank=True)
    DATA03 = models.CharField(max_length=80, null=True, blank=True)
    DATA04 = models.CharField(max_length=80, null=True, blank=True)
    DATA05 = models.CharField(max_length=80, null=True, blank=True)
    DATA06 = models.CharField(max_length=80, null=True, blank=True)
    DATA07 = models.CharField(max_length=80, null=True, blank=True)
    DATA08 = models.CharField(max_length=80, null=True, blank=True)
    DATA09 = models.CharField(max_length=80, null=True, blank=True)
    DATA10 = models.CharField(max_length=80, null=True, blank=True)
    DATA11 = models.CharField(max_length=80, null=True, blank=True)
    DATA12 = models.CharField(max_length=80, null=True, blank=True)
    DATA13 = models.CharField(max_length=80, null=True, blank=True)
    DATA14 = models.CharField(max_length=80, null=True, blank=True)
    DATA15 = models.CharField(max_length=80, null=True, blank=True)
    DATA16 = models.CharField(max_length=80, null=True, blank=True)
    DATA17 = models.CharField(max_length=80, null=True, blank=True)
    DATA18 = models.CharField(max_length=80, null=True, blank=True)
    DATA19 = models.CharField(max_length=80, null=True, blank=True)
    DATA20 = models.CharField(max_length=80, null=True, blank=True)
    DATA21 = models.CharField(max_length=80, null=True, blank=True)
    DATA22 = models.CharField(max_length=80, null=True, blank=True)
    DATA23 = models.CharField(max_length=80, null=True, blank=True)
    DATA24 = models.CharField(max_length=80, null=True, blank=True)
    NO_EXPENSE_ACCOUNT = models.CharField(max_length=80, null=True, blank=True)
    NO_TOOL_GROUP = models.CharField(max_length=80, null=True, blank=True)
    NAME = models.CharField(max_length=40, null=True, blank=True)
    EQUIPMENT_METER = models.CharField(max_length=40, null=True, blank=True)

    class Meta:
        db_table = "EQUP_EQUIPMENT_V"
        verbose_name_plural = "Equipment Views"

    def __str__(self):
        return self.NO_EQUIPMENT

