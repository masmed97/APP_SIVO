# Generated by Django 5.0.6 on 2024-06-27 17:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EqupEquipment',
            fields=[
                ('id_equipment', models.AutoField(primary_key=True, serialize=False)),
                ('no_equipment', models.CharField(max_length=40)),
                ('f_read_only', models.SmallIntegerField()),
                ('f_locked', models.SmallIntegerField()),
                ('f_active', models.SmallIntegerField()),
                ('f_bit_status', models.IntegerField()),
                ('user_created', models.CharField(max_length=30)),
                ('user_modif', models.CharField(max_length=30)),
                ('user_verify', models.CharField(blank=True, max_length=30, null=True)),
                ('date_created', models.DateTimeField()),
                ('date_modif', models.DateTimeField()),
                ('date_verify', models.DateTimeField(blank=True, null=True)),
                ('iso_rev', models.IntegerField()),
                ('id_expense_account', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=120, null=True)),
                ('hour_rate', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('id_tool_group', models.IntegerField(blank=True, null=True)),
                ('id_plant', models.IntegerField(blank=True, null=True)),
                ('equipment_division', models.CharField(blank=True, max_length=80, null=True)),
                ('equipment_location', models.CharField(blank=True, max_length=80, null=True)),
                ('equipment_group', models.CharField(blank=True, max_length=40, null=True)),
                ('guarantee_ending', models.DateTimeField(blank=True, null=True)),
                ('drawing', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.CharField(blank=True, max_length=5000, null=True)),
                ('f_equipment_lock', models.BooleanField()),
                ('id_equipment_meter', models.IntegerField(blank=True, null=True)),
                ('meter_life_value', models.BigIntegerField(blank=True, null=True)),
                ('equipment_photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('f_suite', models.BooleanField()),
                ('area', models.CharField(blank=True, max_length=60, null=True)),
                ('remark_equip_mechanism', models.CharField(blank=True, max_length=2000, null=True)),
                ('id_equipment_group', models.IntegerField(blank=True, null=True)),
                ('id_equipment_division', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('id_equipment_status', models.IntegerField(blank=True, null=True)),
                ('id_equipment_criticality', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Equp Equipment',
                'db_table': 'EQUP_EQUIPMENT',
            },
        ),
        migrations.CreateModel(
            name='MaintWorkOrderCheckList',
            fields=[
                ('id_work_order_check_list', models.AutoField(primary_key=True, serialize=False)),
                ('id_work_order_header', models.IntegerField()),
                ('id_wo_check_list', models.IntegerField()),
                ('line_no', models.IntegerField()),
                ('f_done', models.BooleanField(default=False)),
                ('note', models.CharField(blank=True, max_length=6000, null=True)),
                ('f_read_only', models.SmallIntegerField()),
                ('f_locked', models.SmallIntegerField()),
                ('f_active', models.SmallIntegerField()),
                ('f_bit_status', models.IntegerField()),
                ('user_created', models.CharField(max_length=50)),
                ('user_modif', models.CharField(max_length=50)),
                ('user_verify', models.CharField(blank=True, max_length=50, null=True)),
                ('date_created', models.DateTimeField()),
                ('date_modif', models.DateTimeField()),
                ('date_verify', models.DateTimeField(blank=True, null=True)),
                ('iso_rev', models.IntegerField()),
                ('minimal_limit', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('maximal_limit', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('nominal_value', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('input_value', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('f_non_compliant', models.BooleanField(default=False)),
                ('id_equipment', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Maint Work Order Check Lists',
                'db_table': 'MAINT_WORK_ORDER_CHECK_LIST',
            },
        ),
        migrations.CreateModel(
            name='MaintWorkOrderHeader',
            fields=[
                ('id_work_order_header', models.AutoField(primary_key=True, serialize=False)),
                ('no_work_order_header', models.CharField(max_length=40)),
                ('f_read_only', models.SmallIntegerField()),
                ('f_locked', models.SmallIntegerField()),
                ('f_active', models.SmallIntegerField()),
                ('f_bit_status', models.IntegerField()),
                ('user_created', models.CharField(max_length=30)),
                ('user_modif', models.CharField(max_length=30)),
                ('user_verify', models.CharField(blank=True, max_length=30, null=True)),
                ('date_created', models.DateTimeField()),
                ('date_modif', models.DateTimeField()),
                ('date_verify', models.DateTimeField(blank=True, null=True)),
                ('iso_rev', models.IntegerField()),
                ('f_wo_corrective', models.BooleanField()),
                ('f_wo_preventive', models.BooleanField()),
                ('f_wo_service_call', models.BooleanField()),
                ('id_equipment', models.IntegerField(blank=True, null=True)),
                ('id_employee_receiver', models.IntegerField(blank=True, null=True)),
                ('id_employee_sender', models.IntegerField(blank=True, null=True)),
                ('id_wo_status', models.IntegerField(blank=True, null=True)),
                ('id_expense_account', models.IntegerField(blank=True, null=True)),
                ('id_wo_priority', models.IntegerField(blank=True, null=True)),
                ('date_open', models.DateTimeField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_close', models.DateTimeField(blank=True, null=True)),
                ('date_realisation', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('id_wo_repair_class', models.IntegerField(blank=True, null=True)),
                ('other_took_action', models.CharField(blank=True, max_length=2000, null=True)),
                ('id_work_order_header_parent', models.IntegerField(blank=True, null=True)),
                ('id_work_order_header_preventive', models.IntegerField(blank=True, null=True)),
                ('id_employee_responsible', models.IntegerField(blank=True, null=True)),
                ('id_wo_request', models.IntegerField(blank=True, null=True)),
                ('failure_time', models.DecimalField(decimal_places=6, max_digits=18)),
                ('id_equipment_meter', models.IntegerField(blank=True, null=True)),
                ('life_meter_estimate', models.IntegerField()),
                ('diagnosis', models.CharField(blank=True, max_length=500, null=True)),
                ('solution', models.CharField(blank=True, max_length=500, null=True)),
                ('id_execution_mode', models.IntegerField(blank=True, null=True)),
                ('f_archived', models.BooleanField()),
                ('note', models.CharField(blank=True, max_length=2000, null=True)),
                ('remark_request_code', models.CharField(blank=True, max_length=2000, null=True)),
                ('small_remark', models.CharField(blank=True, max_length=100, null=True)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('id_section_tag', models.IntegerField(blank=True, null=True)),
                ('f_wo_preventive_cfg', models.BooleanField()),
                ('f_wo_work_request', models.BooleanField()),
                ('work_request_state', models.CharField(blank=True, max_length=8, null=True)),
                ('id_employee_approbation_wr', models.IntegerField(blank=True, null=True)),
                ('date_approbation_wr', models.DateTimeField(blank=True, null=True)),
                ('no_work_order_header_wr', models.CharField(blank=True, max_length=40, null=True)),
                ('id_plant', models.IntegerField(blank=True, null=True)),
                ('f_read', models.BooleanField()),
                ('id_locking_procedure_header', models.IntegerField(blank=True, null=True)),
                ('id_inspection_road', models.IntegerField(blank=True, null=True)),
                ('id_calibration_sheet', models.IntegerField(blank=True, null=True)),
                ('note_extra', models.TextField(blank=True, null=True)),
                ('material_status', models.CharField(blank=True, max_length=20, null=True)),
                ('total_time_plan', models.DecimalField(decimal_places=6, max_digits=18)),
                ('f_wo_standard_task', models.BooleanField()),
                ('id_wo_standard_task_type', models.IntegerField(blank=True, null=True)),
                ('no_work_order_task_parent', models.CharField(blank=True, max_length=40, null=True)),
                ('f_wo_anticipated', models.BooleanField()),
                ('f_awaiting_approval', models.BooleanField()),
                ('f_wo_prev_service_call', models.BooleanField()),
                ('meter_emission_value', models.BigIntegerField()),
                ('meter_closing_value', models.BigIntegerField()),
                ('id_wo_standard_task_group', models.IntegerField(blank=True, null=True)),
                ('id_wo_standard_task_category', models.IntegerField(blank=True, null=True)),
                ('id_wo_standard_task_subcategory', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Maint Work Order Headers',
                'db_table': 'MAINT_WORK_ORDER_HEADER',
            },
        ),
        migrations.CreateModel(
            name='ConsUserGroup',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('sec_group', models.CharField(max_length=50)),
                ('f_read_only', models.SmallIntegerField()),
                ('f_active', models.SmallIntegerField()),
                ('f_locked', models.SmallIntegerField()),
                ('f_bit_status', models.IntegerField()),
                ('user_created', models.CharField(default='suser_sname()', max_length=50)),
                ('user_modif', models.CharField(default='suser_sname()', max_length=50)),
                ('date_created', models.DateTimeField()),
                ('date_modif', models.DateTimeField()),
                ('user_verify', models.CharField(blank=True, max_length=50, null=True)),
                ('date_verify', models.DateTimeField(blank=True, null=True)),
                ('iso_rev', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Cons User Groups',
                'db_table': 'CONS_USER_GROUP',
                'unique_together': {('sec_group', 'username')},
            },
        ),
    ]
